load("@rules_java//java:defs.bzl", "java_library")

java_library(
    name = "resourcegroup",
    srcs = [
        "ResourceGroupPersistenceConfig.java",
        "ResourceGroupPersistenceModule.java",
        "ResourceGroupServiceModule.java",
        "ResourceGroupServiceSetup.java",
    ],
    visibility = ["//:__subpackages__"],
    deps = [
        "//940-primary-version-manager/src/main/java/io/harness/controller",
        "//940-primary-version-manager/src/main/java/io/harness/resource",
        "//942-enforcement-sdk/src/main/java/io/harness/enforcement/client",
        "//942-enforcement-sdk/src/main/java/io/harness/enforcement/client/custom",
        "//942-enforcement-sdk/src/main/java/io/harness/enforcement/client/services",
        "//942-enforcement-sdk/src/main/java/io/harness/enforcement/client/usage",
        "//943-enforcement-beans/src/main/java/io/harness/enforcement/constants",
        "//953-events-api/src/main/java/io/harness/eventsframework",
        "//953-events-api/src/main/java/io/harness/eventsframework/api",
        "//953-events-api/src/main/java/io/harness/eventsframework/impl/noop",
        "//953-events-api/src/main/java/io/harness/eventsframework/impl/redis",
        "//953-events-api/src/main/java/io/harness/eventsframework/impl/redis/monitoring/publisher",
        "//955-outbox-sdk/src/main/java/io/harness/outbox",
        "//958-migration-sdk/src/main/java/io/harness/migration/beans",
        "//960-persistence/src/main/java/io/harness/lock",
        "//960-persistence/src/main/java/io/harness/mongo",
        "//960-persistence/src/main/java/io/harness/persistence",
        "//960-persistence/src/main/java/io/harness/redis",
        "//960-persistence/src/main/java/io/harness/springdata",
        "//965-api-key-filter/src/main/java/io/harness/token",
        "//970-ng-commons/src/main/java/io/harness/metrics/jobs",
        "//970-ng-commons/src/main/java/io/harness/metrics/modules",
        "//970-ng-commons/src/main/java/io/harness/metrics/service/api",
        "//970-ng-commons/src/main/java/io/harness/remote",
        "//980-commons/src/main/java/io/harness/govern",
        "//980-commons/src/main/java/io/harness/health",
        "//980-commons/src/main/java/io/harness/reflection",
        "//980-commons/src/main/java/io/harness/threading",
        "//980-commons/src/main/java/io/harness/time",
        "//980-commons/src/main/java/io/harness/version",
        "//999-annotations/src/main/java/io/harness/annotations/dev",
        "//clients/audit/src/main/java/io/harness/audit/client/remote",
        "//platform-service/modules/resource-group-service/src/main/java/io/harness/resourcegroup/migrations",
        "//platform-service/modules/resource-group-service/src/main/java/io/harness/resourcegroup/reconciliation",
        "//platform-service/service/src/main/java/io/harness/platform",
        "//platform-service/service/src/main/java/io/harness/platform/remote",
        "@maven//:com_google_guava_guava",
        "@maven//:io_dropwizard_dropwizard_core",
        "@maven//:io_swagger_core_v3_swagger_annotations",
        "@maven//:io_swagger_core_v3_swagger_integration",
        "@maven//:io_swagger_core_v3_swagger_models",
        "@maven//:org_glassfish_jersey_core_jersey_server",
        "@maven//:org_hibernate_hibernate_validator",
        "@maven//:org_mongodb_morphia_morphia",
        "@maven//:org_projectlombok_lombok",
        "@maven//:org_redisson_redisson",
        "@maven//:org_springframework_data_spring_data_commons",
        "@maven//:org_springframework_data_spring_data_mongodb",
        "@maven//:org_springframework_spring_context",
        "@maven//:ru_vyarus_guice_validator",
    ],
)
