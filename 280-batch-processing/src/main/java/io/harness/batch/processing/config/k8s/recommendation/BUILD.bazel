load("@rules_java//java:defs.bzl", "java_library")

java_library(
    name = "recommendation",
    srcs = [
        "BanzaiRecommenderConfiguration.java",
        "ComputedRecommendationWriter.java",
        "ContainerState.java",
        "ContainerStateV2.java",
        "ContainerStateWriter.java",
        "K8sWorkloadRecommendationConfig.java",
        "NodeRecommendationConfig.java",
        "WorkloadCostService.java",
        "WorkloadRecommendationDao.java",
        "WorkloadSpecWriter.java",
        "WorkloadState.java",
        "WorkloadStateV2.java",
    ],
    visibility = ["//:__subpackages__"],
    deps = [
        "//260-delegate/src/main/java/io/harness/perpetualtask/k8s/watch",
        "//280-batch-processing/src/main/java/io/harness/batch/processing/billing/timeseries/service/impl",
        "//280-batch-processing/src/main/java/io/harness/batch/processing/ccm",
        "//280-batch-processing/src/main/java/io/harness/batch/processing/cloudevents/aws/ecs/service/tasklet",
        "//280-batch-processing/src/main/java/io/harness/batch/processing/config",
        "//280-batch-processing/src/main/java/io/harness/batch/processing/config/k8s/recommendation/estimators",
        "//280-batch-processing/src/main/java/io/harness/batch/processing/dao/intfc",
        "//280-batch-processing/src/main/java/io/harness/batch/processing/pricing/banzai",
        "//280-batch-processing/src/main/java/io/harness/batch/processing/reader",
        "//280-batch-processing/src/main/java/io/harness/batch/processing/service/intfc",
        "//280-batch-processing/src/main/java/io/harness/batch/processing/svcmetrics",
        "//280-batch-processing/src/main/java/io/harness/batch/processing/tasklet",
        "//280-batch-processing/src/main/java/io/harness/batch/processing/tasklet/support",
        "//280-batch-processing/src/main/java/io/harness/batch/processing/tasklet/util",
        "//280-batch-processing/src/main/java/io/harness/batch/processing/writer/constants",
        "//490-ce-commons/src/main/java/io/harness/ccm/commons/beans/recommendation",
        "//490-ce-commons/src/main/java/io/harness/ccm/commons/constants",
        "//490-ce-commons/src/main/java/io/harness/ccm/commons/dao/recommendation",
        "//490-ce-commons/src/main/java/io/harness/ccm/commons/entities/batch",
        "//490-ce-commons/src/main/java/io/harness/ccm/commons/entities/events",
        "//490-ce-commons/src/main/java/io/harness/ccm/commons/entities/k8s",
        "//490-ce-commons/src/main/java/io/harness/ccm/commons/entities/k8s/recommendation",
        "//490-ce-commons/src/main/java/software/wings/graphql/datafetcher/ce/recommendation/entity",
        "//960-persistence/src/main/java/io/harness/persistence",
        "//970-ng-commons/src/main/java/io/harness/remote/client",
        "//980-commons/src/main/java/io/harness/data/structure",
        "//980-commons/src/main/java/io/harness/histogram",
        "//980-commons/src/main/java/io/harness/network",
        "//980-commons/src/main/java/io/harness/time",
        "@maven//:com_cronutils_cron_utils",
        "@maven//:com_github_ben_manes_caffeine_caffeine",
        "@maven//:com_google_guava_guava",
        "@maven//:com_squareup_retrofit2_converter_jackson",
        "@maven//:com_squareup_retrofit2_retrofit",
        "@maven//:io_kubernetes_client_java_api",
        "@maven//:org_checkerframework_checker_qual",
        "@maven//:org_projectlombok_lombok",
        "@maven//:org_springframework_batch_spring_batch_core",
        "@maven//:org_springframework_batch_spring_batch_infrastructure",
        "@maven//:org_springframework_data_spring_data_mongodb",
        "@maven//:org_springframework_spring_beans",
        "@maven//:org_springframework_spring_context",
    ],
)
