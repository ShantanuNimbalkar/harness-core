load("@rules_java//java:defs.bzl", "java_library")

java_library(
    name = "config",
    srcs = [
        "ActualIdleCostBatchConfig.java",
        "AnomalyDetectionConfiguration.java",
        "AwsAccountTagsCollectionJobConfig.java",
        "AwsECSClusterDataSyncConfiguration.java",
        "AwsECSClusterSyncConfiguration.java",
        "AwsECSServiceRecommendationJobConfiguration.java",
        "AzureStorageSyncConfig.java",
        "AzureStorageSyncJobConfig.java",
        "BanzaiConfig.java",
        "BatchConfiguration.java",
        "BatchMainConfig.java",
        "BatchMongoConfiguration.java",
        "BatchPortalConfiguration.java",
        "BatchProcessingModule.java",
        "BatchProcessingRegistrarsModule.java",
        "BatchProcessingTimescaleModule.java",
        "BillingBatchConfiguration.java",
        "BillingDataPipelineConfig.java",
        "BillingDataPipelineConfiguration.java",
        "CEPythonServiceConfig.java",
        "ClusterDataToBigQueryConfiguration.java",
        "ConnectorHealthUpdateJobConfig.java",
        "DataCheckBigqueryAndTimescaleConfig.java",
        "DelegateHealthCheckConfig.java",
        "DeploymentEventConfiguration.java",
        "GcpScheduledQueryTriggerAction.java",
        "GcpSyncJobConfig.java",
        "K8sBatchConfiguration.java",
        "K8sUtilizationConfiguration.java",
        "NoPersistenceBatchConfigurer.java",
        "NodePodCountBatchConfig.java",
        "PodInfoConfig.java",
        "ReportScheduleConfig.java",
        "RerunJobBatchConfig.java",
        "S3SyncJobConfig.java",
        "SchedulerJobsConfig.java",
    ],
    visibility = ["//:__subpackages__"],
    deps = [
        "//280-batch-processing/src/main/java/io/harness/batch/processing/anomalydetection",
        "//280-batch-processing/src/main/java/io/harness/batch/processing/anomalydetection/processor",
        "//280-batch-processing/src/main/java/io/harness/batch/processing/anomalydetection/reader/cloud",
        "//280-batch-processing/src/main/java/io/harness/batch/processing/anomalydetection/reader/k8s",
        "//280-batch-processing/src/main/java/io/harness/batch/processing/anomalydetection/writer",
        "//280-batch-processing/src/main/java/io/harness/batch/processing/billing/tasklet",
        "//280-batch-processing/src/main/java/io/harness/batch/processing/billing/writer",
        "//280-batch-processing/src/main/java/io/harness/batch/processing/ccm",
        "//280-batch-processing/src/main/java/io/harness/batch/processing/cloudevents/aws/ecs/service/tasklet",
        "//280-batch-processing/src/main/java/io/harness/batch/processing/dao/intfc",
        "//280-batch-processing/src/main/java/io/harness/batch/processing/events/deployment/writer",
        "//280-batch-processing/src/main/java/io/harness/batch/processing/metrics",
        "//280-batch-processing/src/main/java/io/harness/batch/processing/reader",
        "//280-batch-processing/src/main/java/io/harness/batch/processing/service/intfc",
        "//280-batch-processing/src/main/java/io/harness/batch/processing/svcmetrics",
        "//280-batch-processing/src/main/java/io/harness/batch/processing/tasklet",
        "//280-batch-processing/src/main/java/io/harness/batch/processing/tasklet/util",
        "//280-batch-processing/src/main/java/io/harness/batch/processing/writer",
        "//280-batch-processing/src/main/java/io/harness/batch/processing/writer/constants",
        "//350-event-server/src/main/java/io/harness/event/app",
        "//374-ceng-graphql/src/main/java/io/harness/ccm/graphql/core/budget",
        "//450-ce-views/src/main/java/io/harness/ccm/views/businessMapping/service/impl",
        "//450-ce-views/src/main/java/io/harness/ccm/views/businessMapping/service/intf",
        "//450-ce-views/src/main/java/io/harness/ccm/views/service",
        "//450-ce-views/src/main/java/io/harness/ccm/views/service/impl",
        "//480-pricing-service/src/main/java/io/harness/pricing/client",
        "//490-ce-commons/src/main/java/io/harness/ccm/bigQuery",
        "//490-ce-commons/src/main/java/io/harness/ccm/commons/beans/config",
        "//490-ce-commons/src/main/java/io/harness/ccm/commons/dao/recommendation",
        "//490-ce-commons/src/main/java/io/harness/ccm/commons/entities/billing",
        "//490-ce-commons/src/main/java/io/harness/ccm/commons/entities/events",
        "//490-ce-commons/src/main/java/io/harness/ccm/commons/service/impl",
        "//490-ce-commons/src/main/java/io/harness/ccm/commons/service/intf",
        "//930-delegate-tasks/src/main/java/software/wings/helpers/ext/mail",
        "//930-ng-core-clients/src/main/java/io/harness/instanceng",
        "//950-events-framework/src/main/java/io/harness/event/handler/segment",
        "//950-ng-authentication-service/src/main/java/software/wings/security/authentication",
        "//950-telemetry/src/main/java/io/harness/telemetry/segment",
        "//957-cg-beans/src/main/java/software/wings/service/impl/instance",
        "//960-continuous-features/src/main/java/io/harness/cf",
        "//960-ng-license-beans/src/main/java/io/harness/licensing/remote",
        "//960-persistence/src/main/java/io/harness/lock",
        "//960-persistence/src/main/java/io/harness/lock/noop",
        "//960-persistence/src/main/java/io/harness/mongo",
        "//960-persistence/src/main/java/io/harness/persistence",
        "//960-persistence/src/main/java/io/harness/timescaledb/metrics",
        "//970-ng-commons/src/main/java/io/harness/metrics/modules",
        "//970-ng-commons/src/main/java/io/harness/metrics/service/api",
        "//970-ng-commons/src/main/java/io/harness/remote/client",
        "//980-commons/src/main/java/io/harness/annotations/retry",
        "//980-commons/src/main/java/io/harness/data/structure",
        "//980-commons/src/main/java/io/harness/govern",
        "//980-commons/src/main/java/io/harness/threading",
        "//980-commons/src/main/java/io/harness/time",
        "//999-annotations/src/main/java/io/harness/annotations/dev",
        "@maven//:com_fasterxml_jackson_core_jackson_annotations",
        "@maven//:com_google_guava_guava",
        "@maven//:commons_io_commons_io",
        "@maven//:org_jooq_jooq",
        "@maven//:org_mongodb_morphia_morphia",
        "@maven//:org_projectlombok_lombok",
        "@maven//:org_springframework_batch_spring_batch_core",
        "@maven//:org_springframework_batch_spring_batch_infrastructure",
        "@maven//:org_springframework_data_spring_data_mongodb",
        "@maven//:org_springframework_guice_spring_guice",
        "@maven//:org_springframework_spring_beans",
        "@maven//:org_springframework_spring_context",
        "@maven//:org_springframework_spring_core",
    ],
)
