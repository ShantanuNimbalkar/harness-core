load("@rules_java//java:defs.bzl", "java_library")

java_library(
    name = "list",
    srcs = [
        "AddAccountIdToOrchestratorMigration.java",
        "AddDeploymentMonitoringSourcePerpetualTask.java",
        "AddEnvRefsToMonitoredServiceMigration.java",
        "AddMetricIdentifierInCVConfigsAndMetricPacks.java",
        "AddMetricIdentifierToTimeSeriesThreshold.java",
        "AddMonitoredServiceToActivityMigration.java",
        "AddMonitoredServiceToCVConfigMigration.java",
        "AddMonitoredServiceToChangeSourceMigration.java",
        "AddMonitoredServiceToHeatMapMigration.java",
        "AddMonitoredServiceToWebhookMigration.java",
        "AddMonitoringSourcesToVerificationJobMigration.java",
        "AddTaskInfoToVerificationTask.java",
        "AppDCVConfigCompleteMetricPathMigration.java",
        "AppDCustomMetricForExistingProjects.java",
        "CVNGBaseMigration.java",
        "CleanUpMonitoringSourcePerpetualTask.java",
        "CleanUpOldDocuments.java",
        "CleanupDeprecatedDocuments.java",
        "CustomHealthCustomPackForExistingProjects.java",
        "DeleteInvalidOrchestratorsMigration.java",
        "DeleteOldAnalysisOrchestratorMigration.java",
        "DeleteOrchestratorWithInvalidVerificationTaskId.java",
        "DeleteSLISLOMigration.java",
        "EnableExistingCVConfigs.java",
        "FixOrchestratorStatusMigration.java",
        "FixRuntimeParamInCanaryBlueGreenVerificationJob.java",
        "FixRuntimeParamsInDefaultHealthJob.java",
        "NewRelicCustomPackForExistingProjects.java",
        "NoOppMigration.java",
        "RecoverMonitoringSourceWorkerId.java",
        "RecreateMetricPackAndThresholdMigration.java",
        "SetNotRequiredActivityAnalysisStatusToIgnored.java",
        "UpdateActivityStatusMigration.java",
        "UpdateApdexMetricCriteria.java",
        "UpdateCvConfigPerpetualTasksMigration.java",
        "UpdateRiskIntToRiskEnum.java",
    ],
    visibility = ["//:__subpackages__"],
    deps = [
        "//300-cv-nextgen/src/main/java/io/harness/cvng/activity/entities",
        "//300-cv-nextgen/src/main/java/io/harness/cvng/activity/services/api",
        "//300-cv-nextgen/src/main/java/io/harness/cvng/analysis/beans",
        "//300-cv-nextgen/src/main/java/io/harness/cvng/analysis/entities",
        "//300-cv-nextgen/src/main/java/io/harness/cvng/core/entities",
        "//300-cv-nextgen/src/main/java/io/harness/cvng/core/entities/changeSource",
        "//300-cv-nextgen/src/main/java/io/harness/cvng/dashboard/entities",
        "//300-cv-nextgen/src/main/java/io/harness/cvng/migration",
        "//300-cv-nextgen/src/main/java/io/harness/cvng/migration/beans",
        "//300-cv-nextgen/src/main/java/io/harness/cvng/servicelevelobjective/entities",
        "//300-cv-nextgen/src/main/java/io/harness/cvng/statemachine/beans",
        "//300-cv-nextgen/src/main/java/io/harness/cvng/statemachine/entities",
        "//300-cv-nextgen/src/main/java/io/harness/cvng/statemachine/services/api",
        "//300-cv-nextgen/src/main/java/io/harness/cvng/verificationjob/entities",
        "//430-cv-nextgen-commons/src/main/java/io/harness/cvng/beans/job",
        "//948-cv-nextgen-beans/src/main/java/io/harness/cvng/beans/activity",
        "//948-cv-nextgen-beans/src/main/java/io/harness/cvng/core/services",
        "//948-cv-nextgen-beans/src/main/java/io/harness/cvng/models",
        "//960-persistence/src/main/java/io/harness/persistence",
        "//980-commons/src/main/java/io/harness/data/structure",
        "//980-commons/src/main/java/io/harness/threading",
        "//999-annotations/src/main/java/io/harness/annotations/dev",
        "@maven//:com_google_guava_guava",
        "@maven//:com_google_http_client_google_http_client",
        "@maven//:org_apache_commons_commons_collections4",
        "@maven//:org_codehaus_groovy_groovy",
        "@maven//:org_mongodb_morphia_morphia",
        "@maven//:org_projectlombok_lombok",
    ],
)
