load("@rules_java//java:defs.bzl", "java_library")

java_library(
    name = "morphia",
    srcs = [
        "LimitsMorphiaRegistrar.java",
        "ManagerMorphiaRegistrar.java",
    ],
    visibility = ["//:__subpackages__"],
    deps = [
        "//400-rest/src/main/java/io/harness/ccm/cluster/entities",
        "//400-rest/src/main/java/io/harness/ccm/communication/entities",
        "//400-rest/src/main/java/io/harness/dashboard",
        "//400-rest/src/main/java/io/harness/event/reconciliation/deployment",
        "//400-rest/src/main/java/io/harness/governance/pipeline/service/model",
        "//400-rest/src/main/java/io/harness/limits/checker/rate",
        "//400-rest/src/main/java/io/harness/marketplace/gcp/procurement/pubsub",
        "//400-rest/src/main/java/software/wings/api/arm",
        "//400-rest/src/main/java/software/wings/api/customdeployment",
        "//400-rest/src/main/java/software/wings/api/instancedetails",
        "//400-rest/src/main/java/software/wings/api/lambda",
        "//400-rest/src/main/java/software/wings/api/pcf",
        "//400-rest/src/main/java/software/wings/beans/alert",
        "//400-rest/src/main/java/software/wings/beans/alert/cv",
        "//400-rest/src/main/java/software/wings/beans/baseline",
        "//400-rest/src/main/java/software/wings/beans/ce/depricated",
        "//400-rest/src/main/java/software/wings/beans/commandlibrary",
        "//400-rest/src/main/java/software/wings/beans/governance",
        "//400-rest/src/main/java/software/wings/beans/infrastructure/instance/stats",
        "//400-rest/src/main/java/software/wings/beans/marketplace/gcp",
        "//400-rest/src/main/java/software/wings/beans/peronalization",
        "//400-rest/src/main/java/software/wings/beans/security/access",
        "//400-rest/src/main/java/software/wings/beans/template",
        "//400-rest/src/main/java/software/wings/beans/template/artifactsource",
        "//400-rest/src/main/java/software/wings/beans/template/command",
        "//400-rest/src/main/java/software/wings/collect",
        "//400-rest/src/main/java/software/wings/helpers/ext/cloudformation",
        "//400-rest/src/main/java/software/wings/prune",
        "//400-rest/src/main/java/software/wings/scheduler/events/segment",
        "//400-rest/src/main/java/software/wings/search/framework",
        "//400-rest/src/main/java/software/wings/service/impl/email",
        "//400-rest/src/main/java/software/wings/service/impl/event",
        "//400-rest/src/main/java/software/wings/service/impl/event/timeseries",
        "//400-rest/src/main/java/software/wings/service/impl/yaml/gitdiff/gitaudit",
        "//400-rest/src/main/java/software/wings/sm/states/collaboration",
        "//400-rest/src/main/java/software/wings/sm/states/customdeployment",
        "//400-rest/src/main/java/software/wings/sm/states/k8s",
        "//400-rest/src/main/java/software/wings/sm/states/rancher",
        "//400-rest/src/main/java/software/wings/timescale/framework",
        "//400-rest/src/main/java/software/wings/verification/apm",
        "//400-rest/src/main/java/software/wings/verification/appdynamics",
        "//400-rest/src/main/java/software/wings/verification/cloudwatch",
        "//400-rest/src/main/java/software/wings/verification/datadog",
        "//400-rest/src/main/java/software/wings/verification/dynatrace",
        "//400-rest/src/main/java/software/wings/verification/instana",
        "//400-rest/src/main/java/software/wings/verification/log",
        "//400-rest/src/main/java/software/wings/verification/newrelic",
        "//400-rest/src/main/java/software/wings/verification/prometheus",
        "//400-rest/src/main/java/software/wings/yaml/errorhandling",
        "//999-annotations/src/main/java/io/harness/annotations/dev",
    ],
)
