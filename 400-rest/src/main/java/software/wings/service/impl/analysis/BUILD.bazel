load("@rules_java//java:defs.bzl", "java_library")

java_library(
    name = "analysis",
    srcs = [
        "AnalysisComparisonStrategyProvider.java",
        "AnalysisContext.java",
        "AnalysisServiceImpl.java",
        "AnalysisTolerance.java",
        "AnalysisToleranceProvider.java",
        "CVCertifiedDetailsForWorkflowState.java",
        "CVCollaborationProviderParameters.java",
        "CVDeploymentData.java",
        "CVEnabledService.java",
        "CVFeedbackRecord.java",
        "ContinuousVerificationExecutionMetaData.java",
        "ContinuousVerificationService.java",
        "ContinuousVerificationServiceImpl.java",
        "DataCollectionCallback.java",
        "DeploymentTimeSeriesAnalysis.java",
        "ElkConnectorProvider.java",
        "ExpAnalysisInfo.java",
        "ExperimentPerformance.java",
        "ExperimentStatus.java",
        "ExperimentalAnalysisServiceImpl.java",
        "ExperimentalLogMLAnalysisRecord.java",
        "ExperimentalMessageComparisonResult.java",
        "ExperimentalMetricAnalysisRecord.java",
        "ExperimentalMetricAnalysisRecordServiceImpl.java",
        "FeedbackAction.java",
        "FeedbackPriority.java",
        "LabeledLogRecord.java",
        "LogClusterContext.java",
        "LogDataRecord.java",
        "LogLabel.java",
        "LogLabelingServiceImpl.java",
        "LogMLAnalysisRecord.java",
        "LogMLAnalysisRequest.java",
        "LogMLAnalysisStatus.java",
        "LogMLAnalysisSummary.java",
        "LogMLClusterSummary.java",
        "LogMLFeedback.java",
        "LogMLFeedbackRecord.java",
        "LogMLFeedbackSummary.java",
        "LogMLHostSummary.java",
        "LogRequest.java",
        "MLAnalysisType.java",
        "MetricAnalysisRecord.java",
        "MetricDataAnalysisServiceImpl.java",
        "SupervisedTSThreshold.java",
        "SupervisedTrainingStatus.java",
        "TSRequest.java",
        "TimeSeriesFilter.java",
        "TimeSeriesKeyTransactions.java",
        "TimeSeriesMLAnalysisRecord.java",
        "TimeSeriesMLAnalysisRecordServiceImpl.java",
        "TimeSeriesMLDataSummary.java",
        "TimeSeriesMLHostSummary.java",
        "TimeSeriesMLMetricScores.java",
        "TimeSeriesMLMetricSummary.java",
        "TimeSeriesMLScores.java",
        "TimeSeriesMLTransactionThresholds.java",
        "TimeSeriesMLTxnScores.java",
        "TimeSeriesMLTxnSummary.java",
        "TimeSeriesMetricGroup.java",
        "TimeSeriesMetricTemplates.java",
        "TimeSeriesRawData.java",
        "TimeSeriesRiskData.java",
        "TimeSeriesRiskSummary.java",
        "VerificationServiceImpl.java",
        "Version.java",
    ],
    visibility = ["//:__subpackages__"],
    deps = [
        "//400-rest/src/main/java/io/harness/microservice",
        "//400-rest/src/main/java/software/wings/alerts",
        "//400-rest/src/main/java/software/wings/beans/alert",
        "//400-rest/src/main/java/software/wings/beans/alert/cv",
        "//400-rest/src/main/java/software/wings/dl",
        "//400-rest/src/main/java/software/wings/service/impl/datadog",
        "//400-rest/src/main/java/software/wings/service/intfc/datadog",
        "//400-rest/src/main/java/software/wings/service/intfc/prometheus",
        "//400-rest/src/main/java/software/wings/service/intfc/sweepingoutput",
        "//400-rest/src/main/java/software/wings/verification/apm",
        "//400-rest/src/main/java/software/wings/verification/appdynamics",
        "//400-rest/src/main/java/software/wings/verification/cloudwatch",
        "//400-rest/src/main/java/software/wings/verification/dashboard",
        "//400-rest/src/main/java/software/wings/verification/datadog",
        "//400-rest/src/main/java/software/wings/verification/dynatrace",
        "//400-rest/src/main/java/software/wings/verification/log",
        "//400-rest/src/main/java/software/wings/verification/newrelic",
        "//400-rest/src/main/java/software/wings/verification/prometheus",
        "//425-verification-commons/src/main/java/io/harness/cv/api",
        "//930-delegate-tasks/src/main/java/software/wings/api/jira",
        "//930-delegate-tasks/src/main/java/software/wings/delegatetasks/cv",
        "//930-delegate-tasks/src/main/java/software/wings/delegatetasks/cv/beans",
        "//930-delegate-tasks/src/main/java/software/wings/service/impl/cloudwatch",
        "//930-delegate-tasks/src/main/java/software/wings/service/impl/log",
        "//930-delegate-tasks/src/main/java/software/wings/service/intfc/logz",
        "//957-cg-beans/src/main/java/software/wings/metrics/appdynamics",
        "//960-persistence/src/main/java/io/harness/mongo/index",
        "//960-persistence/src/main/java/io/harness/persistence",
        "//970-api-services-beans/src/main/java/io/harness/deployment",
        "//980-commons/src/main/java/io/harness/data/encoding",
        "//980-commons/src/main/java/io/harness/data/structure",
        "//980-commons/src/main/java/io/harness/eraro",
        "//980-commons/src/main/java/io/harness/govern",
        "//980-commons/src/main/java/io/harness/version",
        "//999-annotations/src/main/java/io/harness/annotations/dev",
        "@maven//:com_fasterxml_jackson_core_jackson_annotations",
        "@maven//:com_fasterxml_jackson_core_jackson_core",
        "@maven//:com_github_reinert_jjschema",
        "@maven//:com_google_cloud_google_cloud_datastore",
        "@maven//:com_google_code_gson_gson",
        "@maven//:com_google_guava_guava",
        "@maven//:commons_codec_commons_codec",
        "@maven//:org_apache_commons_commons_lang3",
        "@maven//:org_hibernate_hibernate_validator",
        "@maven//:org_json_json",
        "@maven//:org_mongodb_morphia_morphia",
        "@maven//:org_projectlombok_lombok",
    ],
)
