load("@rules_java//java:defs.bzl", "java_library")

java_library(
    name = "execution",
    srcs = [
        "DeploymentStatsQueryMetaData.java",
        "DeploymentTableSchema.java",
        "ExecutionConnectionDataFetcher.java",
        "ExecutionController.java",
        "ExecutionDataFetcher.java",
        "ExecutionInputsDataFetcher.java",
        "ExecutionQueryHelper.java",
        "ExportExecutionsDataFetcher.java",
        "PipelineExecutionController.java",
        "PipelineResumeRuntimeDataFetcher.java",
        "QLBaseExecutionFilter.java",
        "QLDeploymentAggregationFunction.java",
        "QLDurationAggregateOperation.java",
        "QLExecutionFilter.java",
        "ResumeExecutionDataFetcher.java",
        "ResumePipelineController.java",
        "RuntimeExecutionInputsToResumePipelineDataFetcher.java",
        "RuntimeInputExecutionInputsController.java",
        "StartExecutionDataFetcher.java",
        "WorkflowExecutionController.java",
    ],
    visibility = ["//:__subpackages__"],
    deps = [
        "//400-rest/src/main/java/io/harness/execution/export",
        "//400-rest/src/main/java/software/wings/beans/deployment",
        "//400-rest/src/main/java/software/wings/dl",
        "//400-rest/src/main/java/software/wings/graphql/datafetcher",
        "//400-rest/src/main/java/software/wings/graphql/datafetcher/manifest",
        "//400-rest/src/main/java/software/wings/graphql/datafetcher/service",
        "//400-rest/src/main/java/software/wings/graphql/datafetcher/tag",
        "//400-rest/src/main/java/software/wings/graphql/datafetcher/user",
        "//400-rest/src/main/java/software/wings/graphql/schema/mutation/execution/export",
        "//400-rest/src/main/java/software/wings/graphql/schema/mutation/execution/input",
        "//400-rest/src/main/java/software/wings/graphql/schema/mutation/execution/payload",
        "//400-rest/src/main/java/software/wings/graphql/schema/mutation/pipeline/input",
        "//400-rest/src/main/java/software/wings/graphql/schema/mutation/pipeline/payload",
        "//400-rest/src/main/java/software/wings/graphql/schema/type/aggregation/deployment",
        "//400-rest/src/main/java/software/wings/graphql/schema/type/aggregation/environment",
        "//400-rest/src/main/java/software/wings/graphql/schema/type/artifact",
        "//400-rest/src/main/java/software/wings/graphql/schema/type/execution",
        "//400-rest/src/main/java/software/wings/graphql/schema/type/manifest",
        "//400-rest/src/main/java/software/wings/graphql/utils/nameservice",
        "//400-rest/src/main/java/software/wings/resources/graphql",
        "//400-rest/src/main/java/software/wings/service/impl/security/auth",
        "//400-rest/src/main/java/software/wings/service/intfc/applicationmanifest",
        "//960-persistence/src/main/java/io/harness/persistence",
        "//980-commons/src/main/java/io/harness/data/parser",
        "//980-commons/src/main/java/io/harness/data/structure",
        "//980-commons/src/main/java/io/harness/govern",
        "//999-annotations/src/main/java/io/harness/annotations/dev",
        "@maven//:com_fasterxml_jackson_core_jackson_databind",
        "@maven//:com_fasterxml_jackson_datatype_jackson_datatype_guava",
        "@maven//:com_fasterxml_jackson_datatype_jackson_datatype_jdk8",
        "@maven//:com_fasterxml_jackson_datatype_jackson_datatype_jsr310",
        "@maven//:com_google_guava_guava",
        "@maven//:com_graphql_java_graphql_java",
        "@maven//:com_healthmarketscience_sqlbuilder_sqlbuilder",
        "@maven//:org_apache_commons_commons_lang3",
        "@maven//:org_mongodb_morphia_morphia",
        "@maven//:org_projectlombok_lombok",
    ],
)
